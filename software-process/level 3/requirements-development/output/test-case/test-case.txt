--============================================================================--
-- Test Case (object)
--============================================================================--
--------------------------------------------------------------------------------
-- Purpose
--------------------------------------------------------------------------------
The purpose of a test case is to provide a clear definition of what it means
to complete a slice of the requirements. A test case defines a set of test
inputs and expected results for the purpose of evaluating whether or not a
system works correctly.
--------------------------------------------------------------------------------
-- Definition
--------------------------------------------------------------------------------
a) Provide the building blocks for designed and implementing tests.
b) Provide a mechanism to complete and verify the requirements.
c) Allow tests to be specified before implementation starts.
d) Provide a way to access system quality.
e) The most important work product associated with use case.
--------------------------------------------------------------------------------
-- Benefits
--------------------------------------------------------------------------------
a) The test cases provide the true definition of that it is that the system is
supposed to do to support a use case.
b) The test cases are particularly important when we start to slice up the use
cases as they provide the developers with a clear definition of what it means
to successfully implement a use-case slice.
c) The test cases can be used with many forms of requirements practice
including use cases, user stories and declarative requirements.
d) The test cases are the best form of requirements.
e) The test cases defines that the development of use case is complete.
--------------------------------------------------------------------------------
-- Notes
--------------------------------------------------------------------------------
The use-case narratives are collections of stories that the system must
support, and for each story described in the use-case narrative there will have
to be at least one test case. You create the test cases at the same time as the
use-case narratives as part of preparing a use-case slice for development.
--------------------------------------------------------------------------------
-- Test Case (specification)
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
-- Attribute list
--------------------------------------------------------------------------------
-- Code
-- Name
-- Type
-- Level
-- System
-- Summary
-- State
--------------------------------------------------------------------------------
-- Metadata attribute list
--------------------------------------------------------------------------------
-- Author
-- Create timestamp
-- Established date
-- Established time
--------------------------------------------------------------------------------
-- Relationship list
--------------------------------------------------------------------------------
-- Use Case Slice
-- Input
-- Result
--------------------------------------------------------------------------------
-- Lifecycle
--------------------------------------------------------------------------------
-- New
The test case is created.
-- Test Ideas Formulated
The lightest level of detail just captures the initial idea that will inform
the test case. When defining a test case it needs to be clear what the idea
behind the test case is, and which slice of the requirements it applies to.
- Scenario Chosen
To be able to run a test case a tester must be presented with a test scenario
to execute. The structure of the use-case narrative ensures that every use-case
slice will present the tester with one or more candidate test scenarios. The
art of creating effective test cases is to choose the right sub-set of the
potential test scenarios to fulfill the test idea and clearly define done for
the slice.
This is the lightest level of detail that provides an executable test case.
Once the scenario has been chosen the test case is defined enough to support
exploratory and investigative testing. This can be very useful early in the
project lifecycle when the insight provided by testing the system is invaluable
but specification (and solution) may not be stable enough to support formal,
scripted testing.
-- Variables Identified
A test case takes some inputs, manipulates system states, and produces some
results. These variables appear as inputs, internal states and outputs in the
requirements. As this level of detail the acceptable ranges for the key
variables involved in the scenario are explicitly identified.
This level of detail is suitable for those test cases where soliciting the
opinion of the tester is an essential part of the test, for example when
undertaking usability testing. It can also be used when more structure is
needed for exploratory and investigative testing.
-- Variables Set
The test case can be further elaborated by explicitly providing specific
values for all of the variables involved in the test case.
This level of detail is suitable for manual test cases as all the information
needed by an intelligent tester to repeatedly and consistently execute the test
case is in place.
-- Scripted/Automated
If a test case is to be used many times or support many different tests then it
is worth making the effort to fully script or automate it.
At this level of detail the test case can be executed without any intervention
or additional decision making.
